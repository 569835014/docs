{
  "/": {
    "h1": "",
    "title": "Vue.js 2 Material Component Framework",
    "description": "Vuetify.js is a reusable semantic component framework for Vue.js 2. It aims to provide clean, semantic and reusable components.",
    "keywords": "vue, vue 2, vue js, vue.js, material design, vue components, material design components, vuetify, vuetify.js"
  },
  "/motion": {
    "h1": "Motion",
    "title": "Motion / Transitions",
    "description": "Make an amazing application with smooth built in animations",
    "keywords": "motion transitions"
  },
  "/style/colors": {
    "h1": "Colors",
    "title": "Material color pallete",
    "description": "Easily apply any color from the material design pallete.",
    "keywords": "colors"
  },
  "/style/theme": {
    "h1": "Theme",
    "title": "Application theming",
    "description": "Setup your custom application theme.",
    "keywords": "themes"
  },
  "/style/typography": {
    "h1": "Typography",
    "title": "Application typography",
    "description": "View the various typography styles.",
    "keywords": "typography"
  },
  "/style/content": {
    "h1": "Content",
    "title": "Content styles",
    "description": "Vuetify has custom styling for default html markup",
    "keywords": "Content"
  },
  "/layout/pre-defined": {
    "h1": "Pre-defined",
    "title": "Application layouts",
    "description": "Select from a multitude of official material design layouts.",
    "keywords": "pre-defined material design layouts"
  },
  "/layout/grid": {
    "h1": "Grid",
    "title": "Layout grid system",
    "description": "Vuetify supports the material design 12 point grid for laying out your application.",
    "keywords": "grid, layout"
  },
  "/layout/spacing": {
    "h1": "Spacing",
    "title": "Spacing helpers",
    "description": "Spacing helper classes allow you to apply margin or padding to any element.",
    "keywords": "spacing helper classes"
  },
  "/layout/alignment": {
    "h1": "Alignment",
    "title": "Alignment helpers",
    "description": "Alignment helpers assist in modifying your application layout on varying viewport sizes.",
    "keywords": "alignment helper classes"
  },
  "/layout/display": {
    "h1": "Display",
    "title": "Display helpers",
    "description": "Display helper classes allow you to control when elements should display based upon viewport.",
    "keywords": "display helper classes"
  },
  "/layout/elevation": {
    "h1": "Elevation",
    "title": "Elevation helpers",
    "description": "Elevation helper classes allow you to control relative depth, or distance, between two surfaces along the z-axis.",
    "keywords": "elevation helper classes"
  },
  "/vuetify/quick-start": {
    "h1": "Quick Start",
    "title": "Quick Start",
    "description": "Get started with Vue and Vuetify in no time.",
    "keywords": "quick start, vuetify templates, server side rendering"
  },
  "/components/alerts": {
    "h1": "Alerts",
    "title": "Alert Component",
    "description": "The v-alert component is used to convey information to the user. Designed to stand out, the alerts come in four contextual styles, success, info, warning, and error.",
    "keywords": "alerts, components"
  },
  "/components/pagination": {
    "h1": "Pagination",
    "title": "Pagination Component",
    "description": "The v-pagination component is used to separate long sets of data so that it is easier for a user to consume information.",
    "keywords": "pagination, components"
  },
  "/components/parallax": {
    "h1": "Parallax",
    "title": "Parallax Component",
    "description": "The v-parallax component creates a 3d effect that makes an image appear to scroll slower than the window.",
    "keywords": "parallax, components"
  },
  "/components/sliders": {
    "h1": "Sliders",
    "title": "Slider Component",
    "description": "The v-slider component is a better visualization of the number input. It is used for gathering numerical user data.",
    "keywords": "slider, components"
  }
}